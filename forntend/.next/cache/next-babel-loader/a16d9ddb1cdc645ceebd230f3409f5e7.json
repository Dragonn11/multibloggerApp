{"ast":null,"code":"var _jsxFileName = \"D:\\\\myBlog\\\\forntend\\\\components\\\\crud\\\\Category.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { isAuth, getCookie } from '../../actions/auth';\nimport { create } from '../../actions/category';\n\nconst Category = () => {\n  const {\n    0: value,\n    1: setValue\n  } = useState({\n    name: '',\n    error: false,\n    success: false,\n    categories: [],\n    removed: false\n  });\n  const {\n    name,\n    error,\n    success,\n    categories,\n    removed\n  } = values;\n  const token = getCookie('token');\n\n  const handleChange = e => {\n    setValue(_objectSpread({}, value, {\n      name: e.target.value,\n      error: false,\n      success: false,\n      removed: ''\n    }));\n  };\n\n  const clickSubmit = () => {\n    create({\n      name\n    }, token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error,\n          success: false\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          error: false,\n          success: true,\n          name: ''\n        }));\n      }\n    });\n  };\n\n  const newCategoryForm = () => {\n    __jsx(\"form\", {\n      onSubmit: clickSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \" Name\"), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      onClick: handleChange,\n      value: name,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \" Create\")));\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  }, newCategoryForm());\n};","map":{"version":3,"sources":["D:/myBlog/forntend/components/crud/Category.js"],"names":["useState","useEffect","Link","Router","isAuth","getCookie","create","Category","value","setValue","name","error","success","categories","removed","values","token","handleChange","e","target","clickSubmit","then","data","setValues","newCategoryForm"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,QAAQ,GAAC,MAAI;AAEf,QAAM;AAAA,OAACC,KAAD;AAAA,OAAOC;AAAP,MAAiBT,QAAQ,CAAC;AAE5BU,IAAAA,IAAI,EAAC,EAFuB;AAG5BC,IAAAA,KAAK,EAAC,KAHsB;AAI5BC,IAAAA,OAAO,EAAC,KAJoB;AAK5BC,IAAAA,UAAU,EAAC,EALiB;AAM5BC,IAAAA,OAAO,EAAC;AANoB,GAAD,CAA/B;AAUA,QAAM;AAACJ,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA,OAAZ;AAAoBC,IAAAA,UAApB;AAA+BC,IAAAA;AAA/B,MAAwCC,MAA9C;AACA,QAAMC,KAAK,GAACX,SAAS,CAAC,OAAD,CAArB;;AAEA,QAAMY,YAAY,GAAEC,CAAD,IAAK;AACpBT,IAAAA,QAAQ,mBAAKD,KAAL;AAAWE,MAAAA,IAAI,EAACQ,CAAC,CAACC,MAAF,CAASX,KAAzB;AAA+BG,MAAAA,KAAK,EAAC,KAArC;AAA2CC,MAAAA,OAAO,EAAC,KAAnD;AAAyDE,MAAAA,OAAO,EAAC;AAAjE,OAAR;AACH,GAFD;;AAIA,QAAMM,WAAW,GAAC,MAAI;AAElBd,IAAAA,MAAM,CAAC;AAACI,MAAAA;AAAD,KAAD,EAAQM,KAAR,CAAN,CAAqBK,IAArB,CAA0BC,IAAI,IAAE;AAC5B,UAAGA,IAAI,CAACX,KAAR,EAAc;AACVY,QAAAA,SAAS,mBAAMR,MAAN;AAAcJ,UAAAA,KAAK,EAAEW,IAAI,CAACX,KAA1B;AAAiCC,UAAAA,OAAO,EAAE;AAA1C,WAAT;AACH,OAFD,MAEO;AACHW,QAAAA,SAAS,mBAAMR,MAAN;AAAcJ,UAAAA,KAAK,EAAE,KAArB;AAA4BC,UAAAA,OAAO,EAAE,IAArC;AAA2CF,UAAAA,IAAI,EAAE;AAAjD,WAAT;AACH;AACJ,KAND;AAOH,GATD;;AAUA,QAAMc,eAAe,GAAC,MAAI;AAEtB;AAAM,MAAA,QAAQ,EAAEJ,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,OAAO,EAAEH,YAArD;AAAmE,MAAA,KAAK,EAAEP,IAA1E;AAAgF,MAAA,QAAQ,MAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CALJ;AASH,GAXD;;AAaJ,SAAO,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBc,eAAe,EAAhC,CAAP;AACC,CA3CD","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router';\r\nimport { isAuth, getCookie } from '../../actions/auth';\r\nimport { create } from '../../actions/category'\r\n\r\nconst Category=()=>{\r\n\r\n    const [value,setValue]=useState({\r\n\r\n        name:'',\r\n        error:false,\r\n        success:false,\r\n        categories:[],\r\n        removed:false\r\n    \r\n    })\r\n\r\n    const {name,error,success,categories,removed}=values;\r\n    const token=getCookie('token');\r\n    \r\n    const handleChange=(e)=>{\r\n        setValue({...value,name:e.target.value,error:false,success:false,removed:''})\r\n    } \r\n\r\n    const clickSubmit=()=>{\r\n        \r\n        create({name},token).then(data=>{\r\n            if(data.error){\r\n                setValues({ ...values, error: data.error, success: false });\r\n            } else {\r\n                setValues({ ...values, error: false, success: true, name: '' });\r\n            }\r\n        })\r\n    }\r\n    const newCategoryForm=()=>{\r\n\r\n        <form onSubmit={clickSubmit}>\r\n            <div className='form-group'>\r\n                <label className='text-muted'> Name</label>\r\n                <input type='text' className='form-control' onClick={handleChange} value={name} required/>\r\n            </div>\r\n            <div>\r\n                <button type='submit' className='btn btn-primary'> Create</button>\r\n            </div>\r\n        </form>\r\n    }\r\n\r\nreturn(<React.Fragment>{newCategoryForm()}</React.Fragment>)\r\n}"]},"metadata":{},"sourceType":"module"}