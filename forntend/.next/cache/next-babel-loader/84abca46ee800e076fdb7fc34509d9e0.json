{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport cookie from 'js-cookie';\nimport { API } from '../config';\nimport Router from 'next/router';\nexport const handleResponse = response => {\n  if (response.status === 401) {\n    signout(() => {\n      Router.push({\n        pathname: '/signin',\n        query: {\n          message: 'Your session has expired.Please Signin'\n        }\n      });\n    });\n  } else {\n    return;\n  }\n};\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const preSignup = user => {\n  return fetch(`${API}/pre-signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signout = next => {\n  removeCookie('token');\n  removeLocalStorage('user');\n  next();\n  return fetch(`${API}/signout`, {\n    method: 'GET'\n  }).then(response => {\n    console.log('signout success');\n  }).catch(err => console.log(err));\n}; // set cookie\n\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // get cookie\n\nexport const getCookie = key => {\n  if (false) {\n    return cookie.get(key);\n  }\n}; // localstorage\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n}; // autheticate user by pass data to cookie and localstorage\n\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n};\nexport const isAuth = () => {\n  if (false) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};\nexport const updateUser = (user, next) => {\n  if (false) {\n    if (localStorage.getItem('user')) {\n      let auth = JSON.parse(localStorage.getItem('user'));\n      auth = user;\n      localStorage.setItem('user', JSON.stringify(auth));\n      next();\n    }\n  }\n};\nexport const forgotPassword = email => {\n  return fetch(`${API}/forgot-password`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(email)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const resetPassword = resetInfo => {\n  return fetch(`${API}/reset-password`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(resetInfo)\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["D:/myBlog/forntend/actions/auth.js"],"names":["fetch","cookie","API","Router","handleResponse","response","status","signout","push","pathname","query","message","signup","user","method","headers","Accept","body","JSON","stringify","then","json","catch","err","console","log","preSignup","signin","next","removeCookie","removeLocalStorage","setCookie","key","value","set","expires","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeItem","authenticate","data","token","isAuth","cookieChecked","getItem","parse","updateUser","auth","forgotPassword","email","res","resetPassword","resetInfo"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport cookie from 'js-cookie';\r\nimport { API } from '../config';\r\nimport Router from 'next/router';\r\n\r\nexport const handleResponse=response=>{\r\n    if(response.status === 401){\r\n        signout(()=>{\r\n            Router.push({\r\n                pathname:'/signin',\r\n                query:{\r\n                    message:'Your session has expired.Please Signin'\r\n                }\r\n            })\r\n\r\n        })\r\n        \r\n    }else{\r\n        return;\r\n    }\r\n}\r\n\r\nexport const signup = user => {\r\n    return fetch(`${API}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const preSignup = user => {\r\n    return fetch(`${API}/pre-signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const signin = user => {\r\n    return fetch(`${API}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const signout = next => {\r\n    removeCookie('token');\r\n    removeLocalStorage('user');\r\n    next();\r\n\r\n    return fetch(`${API}/signout`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            console.log('signout success');\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n// set cookie\r\nexport const setCookie = (key, value) => {\r\n    if (process.browser) {\r\n        cookie.set(key, value, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeCookie = key => {\r\n    if (process.browser) {\r\n        cookie.remove(key, {\r\n            expires: 1\r\n        });\r\n    }\r\n};\r\n// get cookie\r\nexport const getCookie = key => {\r\n    if (process.browser) {\r\n        return cookie.get(key);\r\n    }\r\n};\r\n// localstorage\r\nexport const setLocalStorage = (key, value) => {\r\n    if (process.browser) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n};\r\n\r\nexport const removeLocalStorage = key => {\r\n    if (process.browser) {\r\n        localStorage.removeItem(key);\r\n    }\r\n};\r\n// autheticate user by pass data to cookie and localstorage\r\nexport const authenticate = (data, next) => {\r\n    setCookie('token', data.token);\r\n    setLocalStorage('user', data.user);\r\n    next();\r\n};\r\n\r\nexport const isAuth = () => {\r\n    if (process.browser) {\r\n        const cookieChecked = getCookie('token');\r\n        if (cookieChecked) {\r\n            if (localStorage.getItem('user')) {\r\n                return JSON.parse(localStorage.getItem('user'));\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const updateUser = (user,next)=>{\r\n    if(process.browser){\r\n        if(localStorage.getItem('user')){\r\n            let auth =JSON.parse(localStorage.getItem('user'))\r\n            auth=user;\r\n            localStorage.setItem('user',JSON.stringify(auth));\r\n            next();\r\n        }\r\n    }\r\n}\r\n\r\nexport const forgotPassword=email=>{\r\n\r\n    return fetch(`${API}/forgot-password`,{\r\n        method:'PUT',\r\n        headers:{\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n        },\r\n        body:JSON.stringify(email)\r\n    }).then(res=>{\r\n        return res.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n}\r\n\r\nexport const resetPassword=resetInfo=>{\r\n\r\n    return fetch(`${API}/reset-password`,{\r\n        method:'PUT',\r\n        headers:{\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n        },\r\n        body:JSON.stringify(resetInfo)\r\n    }).then(res=>{\r\n        return res.json();\r\n    })\r\n    .catch(err=>console.log(err));\r\n}"]},"metadata":{},"sourceType":"module"}