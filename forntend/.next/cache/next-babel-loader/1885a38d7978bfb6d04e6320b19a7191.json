{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\myBlog\\\\forntend\\\\pages\\\\auth\\\\password\\\\reset\\\\[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { userState } from 'react';\nimport Layout from '../../../../components/Layout';\nimport { resetPassword } from '../../../../actions/auth';\nimport { withRouter } from 'next/router';\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var router = _ref.router;\n\n  var _userState = userState({\n    email: '',\n    newPassword: '',\n    message: '',\n    error: '',\n    showForm: true\n  }),\n      _userState2 = _slicedToArray(_userState, 2),\n      values = _userState2[0],\n      setValues = _userState2[1];\n\n  var email = values.email,\n      message = values.message,\n      error = values.error,\n      newPassword = values.newPassword,\n      showForm = values.showForm;\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setValues(_objectSpread({}, values, {\n      message: '',\n      error: ''\n    }));\n    resetPassword({\n      newPassword: newPassword,\n      resetPasswordLink: router.query.id\n    }).then(function (data) {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error,\n          newPassword: ''\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          message: data.message,\n          email: '',\n          showForm: false,\n          newPassword: ''\n        }));\n      }\n    });\n  };\n\n  var showError = function showError() {\n    return error ? __jsx(\"div\", {\n      className: \"alert alert-danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 32\n      }\n    }, error) : '';\n  };\n\n  var showMessage = function showMessage() {\n    return message ? __jsx(\"div\", {\n      className: \"alert alert-success\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 36\n      }\n    }, message) : '';\n  };\n\n  var passwordResetForm = function passwordResetForm() {\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"form-group pt-5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"password\",\n      onChange: function onChange(e) {\n        return setValues(_objectSpread({}, values, {\n          newPassword: e.target.value\n        }));\n      },\n      className: \"form-control\",\n      value: newPassword,\n      placeholder: \"Type new password\",\n      required: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Change password\")));\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Reset password\"), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), showError(), showMessage(), passwordResetForm()));\n};\n\nexport default withRouter(ResetPassword);","map":{"version":3,"sources":["D:/myBlog/forntend/pages/auth/password/reset/[id].js"],"names":["userState","Layout","resetPassword","withRouter","ResetPassword","router","email","newPassword","message","error","showForm","values","setValues","handleSubmit","e","preventDefault","resetPasswordLink","query","id","then","data","showError","showMessage","passwordResetForm","target","value"],"mappings":"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","sourcesContent":["import {userState} from 'react';\r\nimport Layout from '../../../../components/Layout';\r\nimport {resetPassword} from '../../../../actions/auth';\r\nimport { withRouter } from 'next/router';\r\n\r\n\r\n\r\nconst ResetPassword=({router})=>{\r\n\r\n    const [values,setValues]=userState({\r\n\r\n        email:'',\r\n        newPassword:'',\r\n        message:'',\r\n        error:'',\r\n        showForm:true\r\n\r\n    })\r\n\r\n    const {email,message,error,newPassword,showForm} = values;\r\n\r\n   \r\n    const handleSubmit=(e)=>{\r\n\r\n        e.preventDefault();\r\n        setValues({...values,message:'',error:''})\r\n        resetPassword({\r\n            newPassword,\r\n            resetPasswordLink:router.query.id\r\n        }).then(data=>{\r\n            if(data.error){\r\n                setValues({...values,error:data.error,newPassword:''})\r\n            }else{\r\n                setValues({...values,message:data.message,email:'',showForm:false,newPassword:''})\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const showError=()=>(error?<div className='alert alert-danger'>{error}</div>:'')\r\n    const showMessage=()=>(message?<div className='alert alert-success'>{message}</div>:'')\r\n\r\n    const passwordResetForm=()=>(\r\n\r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group pt-5\">\r\n            <input\r\n                type=\"password\"\r\n                onChange={e => setValues({ ...values, newPassword: e.target.value })}\r\n                className=\"form-control\"\r\n                value={newPassword}\r\n                placeholder=\"Type new password\"\r\n                required\r\n            />\r\n        </div>\r\n        <div>\r\n            <button className=\"btn btn-primary\">Change password</button>\r\n        </div>\r\n    </form>\r\n    )\r\n\r\n    return(\r\n        <Layout>\r\n        <div className=\"container\">\r\n            <h2>Reset password</h2>\r\n            <hr />\r\n            {showError()}\r\n            {showMessage()}\r\n            {passwordResetForm()}\r\n        </div>\r\n    </Layout>\r\n    )\r\n\r\n}\r\nexport default withRouter(ResetPassword)"]},"metadata":{},"sourceType":"module"}