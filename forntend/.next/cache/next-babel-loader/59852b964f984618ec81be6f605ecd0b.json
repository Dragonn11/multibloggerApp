{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport cookie from 'js-cookie';\nexport const signup = user => {\n  return fetch(`${API}/signup`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  return fetch(`${API}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signout = next => {\n  removeCookie('token');\n  removelocalStorage('user');\n  next();\n  return fetch(`${API}/signout`, {\n    method: 'GET'\n  }).then(res => {\n    console.log('signout success');\n  }).catch(err => console.log('err'.err));\n};\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\nexport const getCookie = key => {\n  if (false) {\n    return cookie.get(key);\n  }\n};\nexport const setlocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const removelocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n};\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setlocalStorage('user', data.user);\n  next();\n};\nexport const isAuth = () => {\n  if (false) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["D:/myBlog/forntend/actions/auth.js"],"names":["fetch","API","cookie","signup","user","method","headers","Accept","body","JSON","stringify","then","response","json","catch","err","console","log","signin","signout","next","removeCookie","removelocalStorage","res","setCookie","key","value","set","expires","remove","getCookie","get","setlocalStorage","localStorage","setItem","removeItem","authenticate","data","token","isAuth","cookieChecked","getItem","parse"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport cookie from 'js-cookie';\r\n\r\nexport const signup = user => {\r\n    return fetch(`${API}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\nexport const signin = user => {\r\n    return fetch(`${API}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const signout=(next)=>{\r\n    removeCookie('token'); \r\n    removelocalStorage('user');\r\n    next();\r\n\r\n    return fetch(`${API}/signout`,{\r\n        method:'GET'\r\n    }).then(res=>{\r\n        console.log('signout success')\r\n\r\n    }).catch(err=>console.log('err'.err));\r\n}\r\n\r\nexport const setCookie = (key,value)=>{\r\n    if(process.browser){\r\n        cookie.set(key,value,{\r\n            expires:1\r\n        })\r\n    }\r\n}\r\nexport const removeCookie = (key)=>{\r\n    if(process.browser){\r\n        cookie.remove(key,{\r\n            expires:1\r\n        })\r\n    }\r\n}\r\nexport const getCookie = (key)=>{\r\n    if(process.browser){\r\n       return cookie.get(key)\r\n    }\r\n}\r\n\r\n\r\nexport const setlocalStorage = (key,value)=>{\r\n    if(process.browser){\r\n        localStorage.setItem(key,JSON.stringify(value))\r\n    }\r\n}\r\nexport const removelocalStorage = (key)=>{\r\n    if(process.browser){\r\n        localStorage.removeItem(key)\r\n    }\r\n}\r\n\r\nexport const authenticate=(data,next)=>{\r\n    setCookie('token',data.token);\r\n    setlocalStorage('user',data.user);\r\n    next();\r\n}\r\n\r\nexport const isAuth=()=>{\r\n    if(process.browser){\r\n        const cookieChecked = getCookie('token');\r\n        if(cookieChecked){\r\n            if(localStorage.getItem('user')){\r\n                return JSON.parse(localStorage.getItem('user'));\r\n            }else{\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}