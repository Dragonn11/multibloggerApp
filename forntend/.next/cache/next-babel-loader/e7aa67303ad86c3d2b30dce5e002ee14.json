{"ast":null,"code":"var _jsxFileName = \"D:\\\\myBlog\\\\forntend\\\\components\\\\crud\\\\ReadBlog.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport { withRouter } from 'next/router';\nimport { getCookie, isAuth } from '../../actions/auth';\nimport { list, removeBlog } from '../../actions/blog';\nimport moment from 'moment';\n\nconst ReadBlog = () => {\n  const {\n    0: blogs,\n    1: setBlogs\n  } = useState([]);\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const token = getCookie('token');\n  useEffect(() => {\n    loadBlogs();\n  }, []);\n\n  const loadBlogs = () => {\n    list().then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error\n        }));\n      } else {\n        setBlogs(data);\n      }\n    });\n  };\n\n  const deleteBlog = slug => {\n    removeBlog(slug, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setMessage(data.message);\n        loadBlogs();\n      }\n    });\n  };\n\n  const deleteConfirm = slug => {\n    let answer = window.confirm('Do you really want to delete');\n\n    if (answer) {\n      deleteBlog(slug);\n    }\n  };\n\n  const showUpdateButton = blog => {\n    if (isAuth() && isAuth().role === 0) {\n      return __jsx(Link, {\n        href: `/user/crud/${blog.slug}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        className: \"btn btn-sm btn-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, \"Update\"));\n    } else if (isAuth() && isAuth().role === 1) {\n      return __jsx(Link, {\n        href: `/admin/crud/${blog.slug}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        className: \"ml-2 btn btn-sm btn-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, \"Update\"));\n    }\n  };\n\n  const showAllBlogs = () => {\n    return blogs.map((blog, i) => {\n      return __jsx(\"div\", {\n        key: i,\n        className: \"pb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, __jsx(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, blog.title), __jsx(\"p\", {\n        className: \"mark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, \"Written by \", blog.postedBy.name, \" | Published on \", moment(blog.updatedAt).fromNow()), __jsx(\"button\", {\n        className: \"btn btn-sm btn-danger\",\n        onClick: () => deleteConfirm(blog.slug),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, \"Delete\"), showUpdateButton(blog));\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, message && __jsx(\"div\", {\n    className: \"alert alert-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, message), showAllBlogs())));\n};\n\nexport default withRouter(ReadBlog);","map":{"version":3,"sources":["D:/myBlog/forntend/components/crud/ReadBlog.js"],"names":["Link","useState","useEffect","Router","dynamic","withRouter","getCookie","isAuth","list","removeBlog","moment","ReadBlog","blogs","setBlogs","message","setMessage","token","loadBlogs","then","data","error","setValues","values","deleteBlog","slug","console","log","deleteConfirm","answer","window","confirm","showUpdateButton","blog","role","showAllBlogs","map","i","title","postedBy","name","updatedAt","fromNow"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport Router from 'next/router';\r\nimport dynamic from 'next/dynamic';\r\nimport { withRouter } from 'next/router';\r\nimport { getCookie, isAuth } from '../../actions/auth';\r\nimport { list, removeBlog } from '../../actions/blog';\r\nimport moment from 'moment';\r\n\r\n\r\nconst ReadBlog = () => {\r\n    \r\n    const [blogs, setBlogs] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n\r\n    \r\n   \r\n    const token = getCookie('token');\r\n\r\n    useEffect(() => {\r\n        loadBlogs();\r\n    }, []);\r\n\r\n    const loadBlogs = () => {\r\n        list().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setBlogs(data);\r\n            }\r\n        });\r\n    };\r\n\r\n   const deleteBlog =(slug)=>{\r\n\r\n    removeBlog(slug,token).then(data=>{\r\n        if(data.error){\r\n            console.log(data.error);\r\n        }else{\r\n            setMessage(data.message);\r\n            loadBlogs();\r\n        }\r\n    })\r\n   }\r\n   const deleteConfirm=(slug)=>{\r\n       let answer = window.confirm('Do you really want to delete');\r\n       if(answer){\r\n           deleteBlog(slug);\r\n       }\r\n   }\r\n   const showUpdateButton = blog => {\r\n    if (isAuth() && isAuth().role === 0) {\r\n        return (\r\n            <Link href={`/user/crud/${blog.slug}`}>\r\n                <a className=\"btn btn-sm btn-warning\">Update</a>\r\n            </Link>\r\n        );\r\n    } else if (isAuth() && isAuth().role === 1) {\r\n        return (\r\n            <Link href={`/admin/crud/${blog.slug}`}>\r\n                <a className=\"ml-2 btn btn-sm btn-warning\">Update</a>\r\n            </Link>\r\n        );\r\n    }\r\n};\r\n\r\n    const showAllBlogs = () => {\r\n        return blogs.map((blog, i) => {\r\n            return (\r\n                <div key={i} className=\"pb-5\">\r\n                    <h3>{blog.title}</h3>\r\n                    <p className=\"mark\">\r\n                        Written by {blog.postedBy.name} | Published on {moment(blog.updatedAt).fromNow()}\r\n                    </p>\r\n                    <button className=\"btn btn-sm btn-danger\" onClick={() => deleteConfirm(blog.slug)}>\r\n                        Delete\r\n                    </button>\r\n                    {showUpdateButton(blog)}\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    \r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    {message && <div className=\"alert alert-warning\">{message}</div>}\r\n                    {showAllBlogs()}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default withRouter(ReadBlog);"]},"metadata":{},"sourceType":"module"}