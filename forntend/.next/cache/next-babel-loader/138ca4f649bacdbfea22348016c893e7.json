{"ast":null,"code":"var _jsxFileName = \"D:\\\\myBlog\\\\forntend\\\\components\\\\auth\\\\GoogleLogin.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport GoogleLogin from 'react-google-login';\nimport { loginWithGoogle, authenticate, isAuth } from '../../actions/auth';\nimport { GOOGLE_CLIENT_ID } from '../../config';\n\nconst LoginGoogle = () => {\n  const responseGoogle = response => {\n    // console.log(response);\n    const tokenId = response.tokenId;\n    const user = {\n      tokenId\n    };\n    loginWithGoogle(user).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        authenticate(data, () => {\n          if (isAuth() && isAuth().role === 1) {\n            Router.push(`/admin`);\n          } else {\n            Router.push(`/user`);\n          }\n        });\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"pb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(GoogleLogin, {\n    clientId: `${GOOGLE_CLIENT_ID}`,\n    buttonText: \"Login with Google\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    theme: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default GoogleLogin;","map":{"version":3,"sources":["D:/myBlog/forntend/components/auth/GoogleLogin.js"],"names":["Link","useState","useEffect","Router","GoogleLogin","loginWithGoogle","authenticate","isAuth","GOOGLE_CLIENT_ID","LoginGoogle","responseGoogle","response","tokenId","user","then","data","error","console","log","role","push"],"mappings":";;;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,MAAxC,QAAsD,oBAAtD;AACA,SAASC,gBAAT,QAAiC,cAAjC;;AAGA,MAAMC,WAAW,GAAC,MAAI;AAElB,QAAMC,cAAc,GAAGC,QAAQ,IAAI;AAC/B;AACA,UAAMC,OAAO,GAAGD,QAAQ,CAACC,OAAzB;AACA,UAAMC,IAAI,GAAG;AAAED,MAAAA;AAAF,KAAb;AAEAP,IAAAA,eAAe,CAACQ,IAAD,CAAf,CAAsBC,IAAtB,CAA2BC,IAAI,IAAI;AAC/B,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACH,OAFD,MAEO;AACHV,QAAAA,YAAY,CAACS,IAAD,EAAO,MAAM;AACrB,cAAIR,MAAM,MAAMA,MAAM,GAAGY,IAAT,KAAkB,CAAlC,EAAqC;AACjChB,YAAAA,MAAM,CAACiB,IAAP,CAAa,QAAb;AACH,WAFD,MAEO;AACHjB,YAAAA,MAAM,CAACiB,IAAP,CAAa,OAAb;AACH;AACJ,SANW,CAAZ;AAOH;AACJ,KAZD;AAaP,GAlBG;;AAoBJ,SACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,WAAD;AACI,IAAA,QAAQ,EAAG,GAAEZ,gBAAiB,EADlC;AAEI,IAAA,UAAU,EAAC,mBAFf;AAGI,IAAA,SAAS,EAAEE,cAHf;AAII,IAAA,SAAS,EAAEA,cAJf;AAKI,IAAA,KAAK,EAAC,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ;AAYC,CAlCD;;AAoCA,eAAeN,WAAf","sourcesContent":["  \r\nimport Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport Router from 'next/router';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { loginWithGoogle, authenticate, isAuth } from '../../actions/auth';\r\nimport { GOOGLE_CLIENT_ID } from '../../config';\r\n\r\n\r\nconst LoginGoogle=()=>{\r\n\r\n    const responseGoogle = response => {\r\n        // console.log(response);\r\n        const tokenId = response.tokenId;\r\n        const user = { tokenId };\r\n\r\n        loginWithGoogle(user).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                authenticate(data, () => {\r\n                    if (isAuth() && isAuth().role === 1) {\r\n                        Router.push(`/admin`);\r\n                    } else {\r\n                        Router.push(`/user`);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n}\r\n\r\nreturn(\r\n    <div className=\"pb-3\">\r\n    <GoogleLogin\r\n        clientId={`${GOOGLE_CLIENT_ID}`}\r\n        buttonText=\"Login with Google\"\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n        theme=\"dark\"\r\n    />\r\n</div> \r\n\r\n)\r\n}\r\n\r\nexport default GoogleLogin;"]},"metadata":{},"sourceType":"module"}