{"ast":null,"code":"var _jsxFileName = \"D:\\\\myBlog\\\\forntend\\\\pages\\\\auth\\\\password\\\\reset\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { userState } from 'react';\nimport Layout from '../../../components/Layout';\nimport { resetPassword } from '../../../actions/auth';\nimport { withRouter } from 'next/router';\n\nconst ResetPassword = ({\n  router\n}) => {\n  const [values, setValues] = userState({\n    email: '',\n    newPassword: '',\n    message: '',\n    error: '',\n    showForm: true\n  });\n  const {\n    email,\n    message,\n    error,\n    newPassword,\n    showForm\n  } = values;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValues(_objectSpread({}, values, {\n      message: '',\n      error: ''\n    }));\n    resetPassword({\n      newPassword,\n      resetPasswordLink: router.query.id\n    }).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: data.error,\n          newPassword: ''\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          message: data.message,\n          email: '',\n          showForm: false,\n          newPassword: ''\n        }));\n      }\n    });\n  };\n\n  const showError = () => error ? __jsx(\"div\", {\n    className: \"alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 32\n    }\n  }, error) : '';\n\n  const showMessage = () => message ? __jsx(\"div\", {\n    className: \"alert alert-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 36\n    }\n  }, message) : '';\n\n  const passwordResetForm = () => __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group pt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"password\",\n    onChange: e => setValues(_objectSpread({}, values, {\n      newPassword: e.target.value\n    })),\n    className: \"form-control\",\n    value: newPassword,\n    placeholder: \"Type new password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Change password\")));\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Reset password\"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), showError(), showMessage(), passwordResetForm()));\n};\n\nexport default withRouter(ResetPassword);","map":{"version":3,"sources":["D:/myBlog/forntend/pages/auth/password/reset/[id].js"],"names":["userState","Layout","resetPassword","withRouter","ResetPassword","router","values","setValues","email","newPassword","message","error","showForm","handleSubmit","e","preventDefault","resetPasswordLink","query","id","then","data","showError","showMessage","passwordResetForm","target","value"],"mappings":"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","sourcesContent":["import {userState} from 'react';\r\nimport Layout from '../../../components/Layout';\r\nimport {resetPassword} from '../../../actions/auth';\r\nimport { withRouter } from 'next/router';\r\n\r\n\r\n\r\nconst ResetPassword=({router})=>{\r\n\r\n    const [values,setValues]=userState({\r\n\r\n        email:'',\r\n        newPassword:'',\r\n        message:'',\r\n        error:'',\r\n        showForm:true\r\n\r\n    })\r\n\r\n    const {email,message,error,newPassword,showForm} = values;\r\n\r\n   \r\n    const handleSubmit=(e)=>{\r\n\r\n        e.preventDefault();\r\n        setValues({...values,message:'',error:''})\r\n        resetPassword({\r\n            newPassword,\r\n            resetPasswordLink:router.query.id\r\n        }).then(data=>{\r\n            if(data.error){\r\n                setValues({...values,error:data.error,newPassword:''})\r\n            }else{\r\n                setValues({...values,message:data.message,email:'',showForm:false,newPassword:''})\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const showError=()=>(error?<div className='alert alert-danger'>{error}</div>:'')\r\n    const showMessage=()=>(message?<div className='alert alert-success'>{message}</div>:'')\r\n\r\n    const passwordResetForm=()=>(\r\n\r\n        <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group pt-5\">\r\n            <input\r\n                type=\"password\"\r\n                onChange={e => setValues({ ...values, newPassword: e.target.value })}\r\n                className=\"form-control\"\r\n                value={newPassword}\r\n                placeholder=\"Type new password\"\r\n                required\r\n            />\r\n        </div>\r\n        <div>\r\n            <button className=\"btn btn-primary\">Change password</button>\r\n        </div>\r\n    </form>\r\n    )\r\n\r\n    return(\r\n        <Layout>\r\n        <div className=\"container\">\r\n            <h2>Reset password</h2>\r\n            <hr />\r\n            {showError()}\r\n            {showMessage()}\r\n            {passwordResetForm()}\r\n        </div>\r\n    </Layout>\r\n    )\r\n\r\n}\r\nexport default withRouter(ResetPassword)"]},"metadata":{},"sourceType":"module"}