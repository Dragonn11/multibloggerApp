{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport queryString from 'query-string';\nimport { isAuth, handleResponse } from './auth';\nexport const createBlog = (blog, token) => {\n  let createBlogEndpoint;\n\n  if (isAuth() && isAuth().role === 1) {\n    createBlogEndpoint = `${API}/blog`;\n  } else if (isAuth() && isAuth().role === 0) {\n    createBlogEndpoint = `${API}/user/blog`;\n  }\n\n  return fetch(`${API}/blog`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: blog\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listBlogsWithCategoriesAndTags = (skip, limit) => {\n  const data = {\n    limit,\n    skip\n  };\n  return fetch(`${API}/blogs-categories-tags`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const singleBlog = slug => {\n  return fetch(`${API}/blog/${slug}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listRelated = blog => {\n  return fetch(`${API}/blogs/related`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(blog)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const list = () => {\n  return fetch(`${API}/blogs`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removeBlog = (slug, token) => {\n  return fetch(`${API}/blog/${slug}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const updateBlog = (blog, token, slug) => {\n  return fetch(`${API}/blog/${slug}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: blog\n  }).then(res => {\n    return res.json();\n  }).catch(err => console.log(err));\n};\nexport const listSearch = params => {\n  let query = queryString.stringify(params);\n  return fetch(`${API}/blogs/search?${query}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["D:/myBlog/forntend/actions/blog.js"],"names":["fetch","API","queryString","isAuth","handleResponse","createBlog","blog","token","createBlogEndpoint","role","method","headers","Accept","Authorization","body","then","response","json","catch","err","console","log","listBlogsWithCategoriesAndTags","skip","limit","data","JSON","stringify","singleBlog","slug","listRelated","list","removeBlog","res","updateBlog","listSearch","params","query"],"mappings":"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","sourcesContent":["  \r\nimport fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\nimport queryString from 'query-string';\r\nimport { isAuth, handleResponse } from './auth';\r\n\r\nexport const createBlog = (blog, token) => {\r\n\r\n    let createBlogEndpoint;\r\n\r\n    if (isAuth() && isAuth().role === 1) {\r\n        createBlogEndpoint = `${API}/blog`;\r\n    } else if (isAuth() && isAuth().role === 0) {\r\n        createBlogEndpoint = `${API}/user/blog`;\r\n    }\r\n    \r\n    return fetch(`${API}/blog`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: blog\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listBlogsWithCategoriesAndTags = (skip, limit) => {\r\n    const data = {\r\n        limit,\r\n        skip\r\n    };\r\n    return fetch(`${API}/blogs-categories-tags`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const singleBlog = slug => {\r\n    return fetch(`${API}/blog/${slug}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listRelated = (blog) => {\r\n   \r\n    return fetch(`${API}/blogs/related`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(blog)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const list = () => {\r\n    return fetch(`${API}/blogs`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const removeBlog = (slug,token)=>{\r\n    return fetch(`${API}/blog/${slug}`,{\r\n        method:'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n\r\n\r\n    }).then(res=>{\r\n        return res.json();\r\n\r\n    }).catch(err=>console.log(err));\r\n}\r\n\r\nexport const updateBlog =(blog,token,slug)=>{\r\n    return fetch(`${API}/blog/${slug}`,{\r\n\r\n        method:'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n        body:blog\r\n\r\n\r\n    }).then(res=>{\r\n        return res.json();\r\n\r\n    }).catch(err=>console.log(err));\r\n}\r\n\r\nexport const listSearch = (params) => {\r\n\r\n    let query=queryString.stringify(params);\r\n    return fetch(`${API}/blogs/search?${query}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}