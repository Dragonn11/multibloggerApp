{"ast":null,"code":"import fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nexport var createBlog = function createBlog(blog, token) {\n  return fetch(\"\".concat(API, \"/blog\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: blog\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listBlogsWithCategoriesAndTags = function listBlogsWithCategoriesAndTags(skip, limit) {\n  var data = {\n    limit: limit,\n    skip: skip\n  };\n  return fetch(\"\".concat(API, \"/blogs-categories-tags\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var singleBlog = function singleBlog(slug) {\n  return fetch(\"\".concat(API, \"/blog/\").concat(slug), {\n    method: 'GET'\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};\nexport var listRelated = function listRelated(blog) {\n  return fetch(\"\".concat(API, \"/blogs/related\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(blog)\n  }).then(function (response) {\n    return response.json();\n  })[\"catch\"](function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["D:/myBlog/forntend/actions/blog.js"],"names":["fetch","API","createBlog","blog","token","method","headers","Accept","Authorization","body","then","response","json","err","console","log","listBlogsWithCategoriesAndTags","skip","limit","data","JSON","stringify","singleBlog","slug","listRelated"],"mappings":"AACA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,KAAP,EAAiB;AACvC,SAAOJ,KAAK,WAAIC,GAAJ,YAAgB;AACxBI,IAAAA,MAAM,EAAE,MADgB;AAExBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAELC,MAAAA,aAAa,mBAAYJ,KAAZ;AAFR,KAFe;AAMxBK,IAAAA,IAAI,EAAEN;AANkB,GAAhB,CAAL,CAQFO,IARE,CAQG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,WAWI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAXP,CAAP;AAYH,CAbM;AAeP,OAAO,IAAMG,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,IAAD,EAAOC,KAAP,EAAiB;AAC3D,MAAMC,IAAI,GAAG;AACTD,IAAAA,KAAK,EAALA,KADS;AAETD,IAAAA,IAAI,EAAJA;AAFS,GAAb;AAIA,SAAOjB,KAAK,WAAIC,GAAJ,6BAAiC;AACzCI,IAAAA,MAAM,EAAE,MADiC;AAEzCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFgC;AAMzCE,IAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAeF,IAAf;AANmC,GAAjC,CAAL,CAQFT,IARE,CAQG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,WAWI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAXP,CAAP;AAYH,CAjBM;AAmBP,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;AAC9B,SAAOvB,KAAK,WAAIC,GAAJ,mBAAgBsB,IAAhB,GAAwB;AAChClB,IAAAA,MAAM,EAAE;AADwB,GAAxB,CAAL,CAGFK,IAHE,CAGG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALE,WAMI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GANP,CAAP;AAOH,CARM;AAUP,OAAO,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAACrB,IAAD,EAAU;AAEjC,SAAOH,KAAK,WAAIC,GAAJ,qBAAyB;AACjCI,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFwB;AAMjCE,IAAAA,IAAI,EAAEW,IAAI,CAACC,SAAL,CAAelB,IAAf;AAN2B,GAAzB,CAAL,CAQFO,IARE,CAQG,UAAAC,QAAQ,EAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,WAWI,UAAAC,GAAG;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,GAXP,CAAP;AAYH,CAdM","sourcesContent":["  \r\nimport fetch from 'isomorphic-fetch';\r\nimport { API } from '../config';\r\n\r\nexport const createBlog = (blog, token) => {\r\n    return fetch(`${API}/blog`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: blog\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listBlogsWithCategoriesAndTags = (skip, limit) => {\r\n    const data = {\r\n        limit,\r\n        skip\r\n    };\r\n    return fetch(`${API}/blogs-categories-tags`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const singleBlog = slug => {\r\n    return fetch(`${API}/blog/${slug}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listRelated = (blog) => {\r\n   \r\n    return fetch(`${API}/blogs/related`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(blog)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}